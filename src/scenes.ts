import { deunionize, Scenes } from "telegraf";
import { UserSession } from "./types";
import { authUser} from "mystat-api"

const loginScene = (userSession: UserSession) => {
    return new Scenes.WizardScene<Scenes.WizardContext>(
        'login',
        async (ctx) => {
            await ctx.reply('üì≤ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –ª–æ–≥–∏–Ω –æ—Ç mystat');
            return ctx.wizard.next();
        },
        async (ctx) => {
            const username = deunionize(ctx.message)?.text;

            if (!username) {
                return await ctx.reply('–õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–µ–∫—Å—Ç–æ–º');
            }

            userSession.username = username;

            await ctx.reply('üîë –¢–µ–ø–µ—Ä—å –æ–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –ø–∞—Ä–æ–ª—å –æ—Ç mystat');

            return ctx.wizard.next();
        },
        async (ctx) => {
            const password = deunionize(ctx.message)?.text;

            if (!password) {
                return await ctx.reply('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–µ–∫—Å—Ç–æ–º');
            }

            userSession.password = password;

            ctx.reply('üîç –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏');

            const authData = await authUser(userSession.username, userSession.password);
            const isAuth = (await authData).success;
            
            if (!isAuth) {
                return await ctx.reply('üîí –ü—Ä–∏ –≤—Ö–æ–¥–µ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å.');
            }

            await ctx.reply('üîì –í—Ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω');
            return await ctx.scene.leave();
        }
    );
}

export default {
    login: loginScene
}