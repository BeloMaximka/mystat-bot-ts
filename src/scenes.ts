import Telegraf from "telegraf";
//{ deunionize, Scenes }
const Scenes = Telegraf.Scenes;
const deunionize = Telegraf.deunionize;
import { authUser} from "mystat-api"
import { getUserDataFromSession } from "./utils.js";
import { createUser } from "./database/database.js";
import { IUserData } from "./types.js";

const loginScene = new Scenes.WizardScene<Telegraf.Scenes.WizardContext>(
    'login',
    async (ctx) => {
        await ctx.reply('üì≤ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –ª–æ–≥–∏–Ω –æ—Ç mystat');
        return ctx.wizard.next();
    },
    async (ctx) => {
        const username = deunionize(ctx.message)?.text;

        if (!username) {
            return await ctx.reply('–õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–µ–∫—Å—Ç–æ–º');
        }

        (ctx.session as any).username = username;

        ctx.deleteMessage(ctx.message?.message_id);
        await ctx.reply('üîë –¢–µ–ø–µ—Ä—å –æ–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –ø–∞—Ä–æ–ª—å –æ—Ç mystat');

        return ctx.wizard.next();
    },
    async (ctx) => {
        const password = deunionize(ctx.message)?.text;

        if (!password) {
            return await ctx.reply('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–µ–∫—Å—Ç–æ–º');
        }

        (ctx.session as any).password = password;

        ctx.deleteMessage(ctx.message?.message_id);
        ctx.reply('üîç –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏');

        const userData: IUserData = getUserDataFromSession(ctx);
        const authData = await authUser(userData.username, userData.password);
        const isAuth = (await authData).success;
        const chatId = ctx.chat?.id;

        if (!chatId) {
            await ctx.reply('üö´ –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.');
            return await ctx.scene.leave();
        }

        if (!isAuth) {
            await ctx.reply('üîí –ü—Ä–∏ –≤—Ö–æ–¥–µ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å.');
        } else {
            await ctx.reply('üîì –í—Ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω');
            await ctx.reply('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /menu —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é');
            await createUser({ username: userData.username, password: userData.password, chatId });
        }

        return await ctx.scene.leave();
    }
)

export default {
    login: loginScene
}