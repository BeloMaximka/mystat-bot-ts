import { getFutureExams } from "mystat-api";
import { createBackMainMenuButtons, MenuTemplate } from "telegraf-inline-menu";
import { Context } from "vm";
import { formatMessage, getUserDataFromSession } from "../../utils.js";

const futureExamsSubmenu = new MenuTemplate<Context>(async (ctx) => {
    const futureExams = await getFutureExams(getUserDataFromSession(ctx));

    if (!futureExams.success) {
        return 'üö´ –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —ç–∫–∑–∞–º–µ–Ω–æ–≤ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞: ' + futureExams.error;
    } else if (futureExams.data.length === 0) {
        return 'üéâ –£ –≤–∞—Å –Ω–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω—ã—Ö —ç–∫–∑–∞–º–µ–Ω–æ–≤';
    }

    let futureExamsFormatted = '';

    for (const exam of futureExams.data) {
        futureExamsFormatted += formatMessage(
            `‚úèÔ∏è –ü—Ä–µ–¥–º–µ—Ç: ${exam?.spec}`,
            `‚è∞ –î–∞—Ç–∞: ${exam?.date}`
        );
    }

    return [
        '–ë—É–¥—É—â–∏–µ —ç–∫–∑–∞–º–µ–Ω—ã',
        futureExamsFormatted
    ].join('\n');
});
futureExamsSubmenu.manualRow(createBackMainMenuButtons('‚¨ÖÔ∏è –ù–∞–∑–∞–¥'));

export default futureExamsSubmenu;